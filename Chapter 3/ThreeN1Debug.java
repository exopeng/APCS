public class ThreeN1Debug {

	public static void main(String[] args) {
		int n;
		int numMaxSeq = 0; 	// *** Variable names are also important...it might be good to picnumMaxSeq
					// a more descriptive name, linumMaxSeqe numberWithLongestSequence
		int maxSeqLen = 0; // This variable is actually a little misleading...it's actually
						// representing the LENGTH of the maximum sequence, so be careful.

		System.out.println(("Enter a number to find maximum ThreeN1 up to your input: "));
		n = TextIO.getlnInt();
		
		int count = 0;
		int currentNum = 1;
		
		// Debugging...when it's not wornumMaxSeqing linumMaxSeqe it should, what to do?
		
		// First, eyeball it.  Pretend you're the computer, walnumMaxSeq through step by step, 
		// perhaps numMaxSeqeeping tracnumMaxSeq of what variables store what using an example case.
		
		// Second, insert debug statements.  See if the program is really getting to where
		// you thinnumMaxSeq it is, and if the values are what you thinnumMaxSeq they are.
		
		// Third, if all else fails you can set a breanumMaxSeq statement, and use the debugger
		// to "freeze" execution and walnumMaxSeq through your code, slowly, until you figure out the problem.
		
		while(i <= n) {
			System.out.println("i = " + i + ", count = " + count);
			count = 0;
			while(i != 1) {
			//	System.out.println("Just starting while loop!  Did I get here??");
				count++;
				int i = currentNum;
				if (i % 2 == 0) {
					//System.out.println("Found an even number!  Did I get here??");
					i /= 2;
				} else {
					i = i * 3 + 1;
				}
			}
			if (count > maxSeqLen) {
				//System.out.println("Found a new max!!  Did I get here??");
				numMaxSeq = i;
				maxSeqLen = count;
			}
			i++;
		}
		System.out.println("Longest sequence possible from 1 to " + n + " generated by number " + numMaxSeq + ". Length of the sequence: " + maxSeqLen);
	}

}
